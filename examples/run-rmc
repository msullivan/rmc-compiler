#!/bin/bash
set -e

RMC_PLATFORM=arm

while true
do
	case "$1" in
		--gdb)
			shift
			RUN_GDB=1
			;;
		--x86)
			shift
			RMC_PLATFORM=x86
			;;
		--arm)
			shift
			RMC_PLATFORM=arm
			;;
		--smt)
			shift
			export RMC_USE_SMT=1 # export so pass gets it; ew
			;;
		--exe)
			shift
			BUILD_EXE=1
			;;
		*)
			break
	esac
done
export RMC_PLATFORM #export it so our pass will pick it up; ew.


NAME=$(basename $1 .c)
PATH=../../build/Debug+Asserts/bin/:$PATH

case $RMC_PLATFORM in
	arm)
		PLATFORM_FLAGS="--target=armv7a -mfloat-abi=hard"
#		INCLUDE_FLAGS="-I /usr/arm-linux-gnueabihf/include/c++/4.8.2/ -I /usr/arm-linux-gnueabihf/include/c++/4.8.2/arm-linux-gnueabihf/"
		INCLUDE_FLAGS="-I /usr/arm-linux-gnueabihf/include/"
		LINKER=arm-linux-gnueabihf-gcc
		;;
	x86)
		LINKER=clang
		;;
esac

if [ $BUILD_EXE ]; then
    DEF_FLAGS=""
else
    DEF_FLAGS="-DNO_TEST -DONLY_RMC"
fi

clang $PLATFORM_FLAGS $INCLUDE_FLAGS $DEF_FLAGS -DHAS_RMC=1 -Wall -emit-llvm -c -o $NAME.pre.bc $1
llvm-dis $NAME.pre.bc

if [ $RUN_GDB ]; then
	gdb --args opt -load ../RMC.so -mem2reg -realize-rmc $NAME.pre.bc -o $NAME.bc
else
	time opt -load ../RMC.so -mem2reg -realize-rmc $NAME.pre.bc -o $NAME.bc
fi

llvm-dis $NAME.bc

clang $PLATFORM_FLAGS -O -emit-llvm -c -o $NAME.opt.bc $NAME.bc
llvm-dis $NAME.opt.bc

clang $PLATFORM_FLAGS -O -S -o $NAME.s $NAME.opt.bc

if [ $BUILD_EXE ]; then
    $LINKER -pthread $NAME.s -o $NAME
fi
